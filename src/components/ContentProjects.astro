---
interface Project {
    name: string;
    description: string;
    link: {
        url?: string;
        target?: string;
        title?: string;
        buttonLabel?: string;
    };
};

const projects: Project[] = [
  {
    name: 'Tastio',
    description: 'A full-stack food ordering app with role-based access for Admins, Restaurants, and Customers. Features secure payments via Stripe and responsive UI using the MERN stack.',
    link: {
      url: 'https://tastio-4.onrender.com/login',
    },
  },
  {
    name: 'Catalyst',
    description: 'Official website of the MCA Coding Club at NIT Bhopal, showcasing events, blogs, and members. Built with React and Tailwind CSS, deployed on Vercel.',
    link: {
      url: 'https://the-catalyst-smoky.vercel.app/',
    },
  },
  {
    name: 'ClipCraft AI',
    description: 'An AI-powered SaaS platform that generates short-form videos from text or content input. Built with Next.js, Tailwind, Firebase, and Inngest for background processing.',
    link: {
      url: 'https://clipart-short-video-gen-ov2n.vercel.app/dashboard',
    },
  },
  {
    name: 'Converso',
    description: 'A modern SaaS communication tool for real-time AI voice conversations. Built with Next.js, Supabase, Vapi, and Clerk. Features real-time data and secure auth.',
    link: {
      url: 'https://saas-app-plum.vercel.app',
    },
  },
  {
    name: 'AI Medical Agent',
    description: 'An AI-powered voice assistant for healthcare that automates triage, appointment booking, and symptom analysis using LLMs, Vapi, Clerk, and AssemblyAI.',
    link: {
      url: 'https://ai-medical-assistant-sq4c.vercel.app/',
    },
  },
  {
    name: 'SpendWise',
    description: 'A mobile expense tracking app built with React Native and Expo. Helps users monitor spending, view transaction history, and manage budgets with ease.',
    link: {
      url: 'https://expo.dev/accounts/mesachin/projects/spendwise/builds/f64cfbc7-0c90-4081-b675-1151b5cd81eb',
    },
  },
];

---

<div>

    <!-- <h2 class="text-2xl font-bold text-white mb-4">Latest Projects</h2> -->

    <div class="grid grid-cols-1 md:grid-cols-2 gap-4" id="projects-grid">
        {projects.map((project, index) => (
            <div class={`flex flex-col justify-center items-start border border-gray-700 rounded-lg p-4 bg-black ${index >= 3 ? 'hidden' : ''}`} data-project-index={index}>
                <h3 class="text-xl font-semibold text-white mb-2">
                    {project.name}
                </h3>

                <p class="text-gray-400">
                    {project.description}
                </p>

                {
                    project.link?.url ?
                        <a
                            href={project.link.url}
                            title={project.link.title || project.name}
                            target={project.link.target || '_blank'}
                            class="
                                w-full px-4 py-2.5 mt-4 text-center
                                border border-gray-600 rounded-lg
                                hover:text-primary
                                hover:border-primary
                            ">
                            {project.link.buttonLabel || 'Open Project Website'}
                        </a>
                    : null
                }
            </div>
        ))}
    </div>

    {projects.length > 3 && (
        <div class="text-center mt-6">
            <button 
                id="load-more-btn"
                class="px-6 py-3 border border-gray-600 rounded-lg hover:text-primary hover:border-primary transition-colors">
                Load More Projects
            </button>
        </div>
    )}

</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const loadMoreBtn = document.getElementById('load-more-btn');
        const projectsGrid = document.getElementById('projects-grid');
        
        if (loadMoreBtn && projectsGrid) {
            loadMoreBtn.addEventListener('click', function() {
                const hiddenProjects = projectsGrid.querySelectorAll('.hidden');
                
                hiddenProjects.forEach(project => {
                    project.classList.remove('hidden');
                });
                
                // Hide the load more button after showing all projects
                loadMoreBtn.style.display = 'none';
            });
        }
    });
</script>
